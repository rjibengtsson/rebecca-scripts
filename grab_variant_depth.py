'''
Description: Given a vcf file produced by bcftools isec, this script will intersect the positions with a
samtools depth output file and grab the depth at that position.

Usage: python3 grab_variant_depth.py -vcf ../vcf_compare/ERR2138728_vs_ERR2138456/0000.vcf -depth ERR2138728.P1.depth -out ERR2138728.variants.depth
'''

import subprocess
import argparse

parser = argparse.ArgumentParser(description='Get variant depth')
parser.add_argument('-vcf','--vcf', help='vcf file generated by bcftools isec ', required=True)
parser.add_argument('-depth','--depth', help='Depth file generated by samtools depth', required=True)
parser.add_argument('-out','--out', help='Output file', required=True)
args = parser.parse_args()

vcf_file = args.vcf
depth_file = args.depth
out_file = args.out

def generate_variant_pos(vcf_file):

    cmd = f'grep -v "#" {vcf_file} | cut -f1,2 > diff_sites.txt'
    subprocess.run([cmd], shell=True)

    return 'diff_sites.txt'


def intersect_depth_file(vcf_file, depth_file, out_file):

    pos_file = generate_variant_pos(vcf_file)
    pos_lst = open(pos_file, 'r').read().splitlines()
    bed_file = open(depth_file, 'r').read().splitlines()

    with open(out_file, 'w') as out_file:
        for pos in pos_lst:
            pos = pos.split()
            for line in bed_file:
                line = line.split()
                if (line[0] == pos[0]) and (line[1]==pos[1]):
                    new_line = line[0] + '\t' + line[1] + '\t' + line[2] + '\n'
                    print(new_line)
                    out_file.write(new_line)


    cmd = f"rm diff_sites.txt"
    subprocess.run([cmd], shell=True)

    return out_file

intersect_depth_file(vcf_file, depth_file, out_file)